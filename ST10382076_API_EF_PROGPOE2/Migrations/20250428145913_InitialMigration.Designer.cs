// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ST10382076_API_EF_PROGPOE2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250428145913_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ST10382076_API_EF_PROGPOE2.Models.tblProduct", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<DateTime>("ProductDateTimeAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            ProductDateTimeAdded = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductDescription = "High-efficiency solar irrigation system for medium-sized farms.",
                            ProductImage = "solar_pump.jpg",
                            ProductName = "Solar Powered Irrigation Pump",
                            ProductPrice = 35000.0,
                            ProductType = "Solar",
                            UserID = 1
                        },
                        new
                        {
                            ProductID = 2,
                            ProductDateTimeAdded = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductDescription = "Small-scale wind turbine optimized for rural farm energy generation.",
                            ProductImage = "wind_turbine.jpg",
                            ProductName = "Wind Turbine for Farms",
                            ProductPrice = 50000.0,
                            ProductType = "Wind",
                            UserID = 1
                        },
                        new
                        {
                            ProductID = 3,
                            ProductDateTimeAdded = new DateTime(2025, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductDescription = "Complete biogas system suitable for agricultural waste-to-energy conversion.",
                            ProductImage = "biogas_kit.jpg",
                            ProductName = "Biogas Digester Kit",
                            ProductPrice = 25000.0,
                            ProductType = "Biogas",
                            UserID = 1
                        });
                });

            modelBuilder.Entity("ST10382076_API_EF_PROGPOE2.Models.tblRole", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "Employee"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "Farmer"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("ST10382076_API_EF_PROGPOE2.Models.tblUser", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserBio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserExpertiseLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImageUpload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLanguage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserPreviousCollaborators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSkills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            RoleID = 1,
                            UserBio = "Specialist in sustainable farming technologies.",
                            UserCity = "Cape Town",
                            UserExpertiseLevel = "Expert",
                            UserImageUpload = "emily_upload.jpg",
                            UserLanguage = "English",
                            UserName = "Emily",
                            UserPreviousCollaborators = "AgriSolar Ltd.",
                            UserProfileImage = "emily_profile.jpg",
                            UserProvince = "Western Cape",
                            UserSkills = "Solar Installation, Customer Support",
                            UserSurname = "Greenfield"
                        },
                        new
                        {
                            UserID = 2,
                            RoleID = 2,
                            UserBio = "Experienced maize and wheat farmer transitioning to renewable energy.",
                            UserCity = "Pietermaritzburg",
                            UserExpertiseLevel = "Intermediate",
                            UserImageUpload = "john_upload.jpg",
                            UserLanguage = "Zulu",
                            UserName = "John",
                            UserPreviousCollaborators = "GreenEarth NGO",
                            UserProfileImage = "john_profile.jpg",
                            UserProvince = "KwaZulu-Natal",
                            UserSkills = "Irrigation Management, Soil Health",
                            UserSurname = "Nkosi"
                        },
                        new
                        {
                            UserID = 3,
                            RoleID = 3,
                            UserBio = "Purchasing green tech solutions for her family's farm.",
                            UserCity = "Polokwane",
                            UserExpertiseLevel = "Beginner",
                            UserImageUpload = "sara_upload.jpg",
                            UserLanguage = "English",
                            UserName = "Sara",
                            UserPreviousCollaborators = "",
                            UserProfileImage = "sara_profile.jpg",
                            UserProvince = "Limpopo",
                            UserSkills = "Farm Administration",
                            UserSurname = "Mthembu"
                        });
                });

            modelBuilder.Entity("ST10382076_API_EF_PROGPOE2.Models.tblProduct", b =>
                {
                    b.HasOne("ST10382076_API_EF_PROGPOE2.Models.tblUser", "tblUser")
                        .WithMany("Products")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblUser");
                });

            modelBuilder.Entity("ST10382076_API_EF_PROGPOE2.Models.tblUser", b =>
                {
                    b.HasOne("ST10382076_API_EF_PROGPOE2.Models.tblRole", "tblRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblRole");
                });

            modelBuilder.Entity("ST10382076_API_EF_PROGPOE2.Models.tblRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ST10382076_API_EF_PROGPOE2.Models.tblUser", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
